plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.10'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.puc'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}


repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor 'org.hibernate:hibernate-jpamodelgen:5.6.14.Final'

    implementation 'org.hibernate:hibernate-jpamodelgen:5.6.14.Final'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

def JPA_MODELGEN_PATH='src/jpaModelgen/java'

sourceSets {
    main {
        java {
            srcDir JPA_MODELGEN_PATH
        }
    }
}

tasks.register('cleanJpaModelgen') {
    doLast {
        project.delete(JPA_MODELGEN_PATH)
    }
}

tasks.withType(JavaCompile).configureEach {
    def jpaModelgenDir = file(JPA_MODELGEN_PATH)
    options.annotationProcessorGeneratedSourcesDirectory = jpaModelgenDir
    outputs.dir(jpaModelgenDir)
}

clean.dependsOn ('cleanJpaModelgen')
compileJava.dependsOn ('cleanJpaModelgen')